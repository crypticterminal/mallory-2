#!/usr/bin/env ruby

lib = File.expand_path(File.dirname(__FILE__) + '/../lib')
$LOAD_PATH.unshift(lib) if File.directory?(lib) && !$LOAD_PATH.include?(lib)

require 'mallory'
require 'mallory/configuration'
require 'optparse'
require 'logger'

#ARGV << '--help' if ARGV.empty?

options = {}
OptionParser.new do |opts|
  opts.banner = "Usage: proxybalancer [options]"

  opts.on("-l", "--listen PORT", Integer, "Port to listen on (default 9999)") do |v|
    options[:listen] = v
  end

  opts.on("-b", "--backend BACKEND", String, "Backend to use (default 'file://proxies.txt')") do |v|
    options[:listen] = v
  end

  opts.on("-ct", "--connect-timeout SECONDS", Integer, "Proxy connect timeout (default 2s)") do |v|
    options[:ct] = v
  end

  opts.on("-it", "--inactivity-timeout SECONDS", Integer, "Proxy inactivity timeout (default 2s)") do |v|
    options[:it] = v
  end

  opts.on("-v", "--verbose", "Run in debug mode") do |v|
    options[:verbose] = v
  end
end.parse!

config = Mallory::Configuration.register do |c|
  # http://www.ruby-doc.org/stdlib-1.9.3/libdoc/logger/rdoc/Logger.html
  logger = Logger.new($stdout)
  level = options.delete(:verbose) ? Logger::DEBUG : Logger::INFO
  logger.level = level
  logger.datetime_format = '%F %T.%L'
  c.logger = logger
  c.backend = EventMachine::Mallory::Backend::File.new("#{Dir.pwd}/proxies.txt")
#  c.backend = Mallory::Backend::Redis.new("127.0.0.1", 6379)
  c.connect_timeout = options.delete(:connect_timeout) || 2
  c.inactivity_timeout = options.delete(:inactivity_timeout) || 2
  c.listen = options.delete(:listen) || 9999
end

EventMachine::Mallory::Server.new(config).start!
